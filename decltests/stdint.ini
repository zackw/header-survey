[preamble]
header = stdint.h
baseline = c99

# We only look for 8/16/32/64-bit types.

[types:c99]
int_least8_t   = signed
uint_least8_t  = unsigned
int_least16_t  = signed
uint_least16_t = unsigned
int_least32_t  = signed
uint_least32_t = unsigned
int_least64_t  = signed
uint_least64_t = unsigned

int_fast8_t    = signed
uint_fast8_t   = unsigned
int_fast16_t   = signed
uint_fast16_t  = unsigned
int_fast32_t   = signed
uint_fast32_t  = unsigned
int_fast64_t   = signed
uint_fast64_t  = unsigned

intmax_t       = signed
uintmax_t      = unsigned

[types:c99:optional]
int8_t         = signed
uint8_t        = unsigned
int16_t        = signed
uint16_t       = unsigned
int32_t        = signed
uint32_t       = unsigned
int64_t        = signed
uint64_t       = unsigned

intptr_t       = signed
uintptr_t      = unsigned

[constants:c99]
INT_LEAST8_MIN   =  <=  INT8_C(-127)
INT_LEAST8_MAX   =  >=  INT8_C( 127)
UINT_LEAST8_MAX  =  >= UINT8_C( 255)

INT_LEAST16_MIN  =  <=  INT16_C(-32767)
INT_LEAST16_MAX  =  >=  INT16_C( 32767)
UINT_LEAST16_MAX =  >= UINT16_C( 65535)

INT_LEAST32_MIN  =  <=  INT32_C(-2147483647)
INT_LEAST32_MAX  =  >=  INT32_C( 2147483647)
UINT_LEAST32_MAX =  >= UINT32_C( 4294967295)

INT_LEAST64_MIN  =  <=  INT64_C(-9223372036854775807)
INT_LEAST64_MAX  =  >=  INT64_C( 9223372036854775807)
UINT_LEAST64_MAX =  >= UINT64_C(18446744073709551615)

INT_FAST8_MIN    =  <=  INT8_C(-127)
INT_FAST8_MAX    =  >=  INT8_C( 127)
UINT_FAST8_MAX   =  >= UINT8_C( 255)

INT_FAST16_MIN   =  <=  INT16_C(-32767)
INT_FAST16_MAX   =  >=  INT16_C( 32767)
UINT_FAST16_MAX  =  >= UINT16_C( 65535)

INT_FAST32_MIN   =  <=  INT32_C(-2147483647)
INT_FAST32_MAX   =  >=  INT32_C( 2147483647)
UINT_FAST32_MAX  =  >= UINT32_C( 4294967295)

INT_FAST64_MIN   =  <=  INT64_C(-9223372036854775807)
INT_FAST64_MAX   =  >=  INT64_C( 9223372036854775807)
UINT_FAST64_MAX  =  >= UINT64_C(18446744073709551615)

INTMAX_MIN       =  <=  INTMAX_C(-9223372036854775807)
INTMAX_MAX       =  >=  INTMAX_C( 9223372036854775807)
UINTMAX_MAX      =  >= UINTMAX_C(18446744073709551615)

# other required limit macros
PTRDIFF_MIN      =  <= -65535
PTRDIFF_MAX      =  >=  65535

SIZE_MAX         =  >=  65535

SIG_ATOMIC_MIN   =  $ == 0 || $ <= -127
SIG_ATOMIC_MAX   =  SIG_ATOMIC_MIN == 0 ? ($ >= 255) : ($ >= 127)

WCHAR_MIN        =  $ == 0 || $ <= -127
WCHAR_MAX        =  WCHAR_MIN == 0 ? ($ >= 255) : ($ >= 127)

WINT_MIN         =  $ == 0 || $ <= -32767
WINT_MAX         =  SIG_ATOMIC_MIN == 0 ? ($ >= 65535) : ($ >= 32767)

[constants:c99:optional]
# Unlike the _least and _fast types, the signed exact-width types are
# required to be twos-complement.
INT8_MIN    =  <=  INT8_C(-127) - 1
INT8_MAX    =  >=  INT8_C( 127)
UINT8_MAX   =  >= UINT8_C( 255)

INT16_MIN   =  <=  INT16_C(-32767) - 1
INT16_MAX   =  >=  INT16_C( 32767)
UINT16_MAX  =  >= UINT16_C( 65535)

INT32_MIN   =  <=  INT32_C(-2147483647) - 1
INT32_MAX   =  >=  INT32_C( 2147483647)
UINT32_MAX  =  >= UINT32_C( 4294967295)

INT64_MIN   =  <=  INT64_C(-9223372036854775807) - 1
INT64_MAX   =  >=  INT64_C( 9223372036854775807)
UINT64_MAX  =  >= UINT64_C(18446744073709551615)

INTPTR_MIN  =  <= -32767
INTPTR_MAX  =  >=  32767
UINTPTR_MAX =  >=  65535

# the _C macros have all been used above, but a failure there will not
# count as a failure _of the _C macro_
[fn_macros:c99]
INT8_C    =   int_least8_t : expr(1)
UINT8_C   =  uint_least8_t : expr(1)
INT16_C   =  int_least16_t : expr(1)
UINT16_C  = uint_least16_t : expr(1)
INT32_C   =  int_least32_t : expr(1)
UINT32_C  = uint_least32_t : expr(1)
INT64_C   =  int_least64_t : expr(1)
UINT64_C  = uint_least64_t : expr(1)
INTMAX_C  =       intmax_t : expr(1)
UINTMAX_C =      uintmax_t : expr(1)
