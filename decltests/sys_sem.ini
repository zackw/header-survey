[preamble]
header = sys/sem.h
baseline = x5
includes = sys/ipc.h

[constants:x5]
SEM_UNDO =
GETNCNT  =
GETPID   =
GETVAL   =
GETALL   =
GETZCNT  =
SETVAL   =
SETALL   =

[types:x5]
pid_t  = signed
size_t = unsigned
time_t = integral

[structs:x5]
s_semid_ds.sem_perm  = struct ipc_perm
# nominally unsigned short
s_semid_ds.sem_nsems = integral
s_semid_ds.sem_otime = time_t
s_semid_ds.sem_ctime = time_t

s_sembuf.sem_num = unsigned short
s_sembuf.sem_op  = short
s_sembuf.sem_flg = short

# http://pubs.opengroup.org/onlinepubs/7908799/xsh/syssem.h.html
# describes an "anonymous structure" that "represents" a semaphore,
# but as far as I can tell this structure is not actually supposed to
# be defined in sem.h; it's only a characterization of the various
# datums that semctl() can retrieve.

# The optional fourth argument to semctl() is defined as "of type
# _union semun_ (which the application must declare)" but as far as I
# can tell that's a mis-characterization; it should work just as well
# to pass any of its members.

[functions:x5]
semget = int : key_t, int, int
semctl = int : int, int, int, ...struct semid_ds *
semop  = int : int, struct sembuf *, size_t
