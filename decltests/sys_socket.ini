[preamble]
header = sys/socket.h
baseline = x5

[types:x5]
size_t      = unsigned
socklen_t   = integral
sa_family_t = unsigned
iovec       = incomplete struct

[structs:x5]
s_sockaddr.sa_family    = sa_family_t
s_sockaddr.sa_data      = char []

s_linger.l_onoff        = int
s_linger.l_linger       = int

s_msghdr.msg_name       = void *
s_msghdr.msg_namelen    = socklen_t
s_msghdr.msg_iovlen     = integral
s_msghdr.msg_control    = void *
s_msghdr.msg_controllen = integral
s_msghdr.msg_flags      = int

s_cmsghdr.cmsg_len      = integral
s_cmsghdr.cmsg_level    = int
s_cmsghdr.cmsg_type     = int

[structs:x6]
# Added in X6.
s_sockaddr_storage.ss_family = sa_family_t

[structs:x6:mht]
# Field type definitions clarified in X6.  Some systems still use
# socklen_t or int for these.
s_msghdr.msg_iovlen     = size_t
s_msghdr.msg_controllen = size_t
s_cmsghdr.cmsg_len      = size_t

[fn_macros:x5]
CMSG_FIRSTHDR = struct cmsghdr * : struct msghdr *
CMSG_NXTHDR   = struct cmsghdr * : struct msghdr *, struct cmsghdr *
CMSG_DATA     = unsigned char *  : struct cmsghdr *

[functions:x5]
accept      = int      : int, struct sockaddr *, socklen_t *
bind        = int      : int, const struct sockaddr *, socklen_t
connect     = int      : int, const struct sockaddr *, socklen_t
getpeername = int      : int, struct sockaddr *, socklen_t *
getsockname = int      : int, struct sockaddr *, socklen_t *
getsockopt  = int      : int, int, int, void *, socklen_t *
listen      = int      : int, int
recv        = ssize_t  : int, void*, size_t, int
recvfrom    = ssize_t  : int, void*, size_t, int, struct sockaddr*, socklen_t*
recvmsg     = ssize_t  : int, struct msghdr *, int
send        = ssize_t  : int, const void *, size_t, int
sendto      = ssize_t  : int, const void *, size_t, int,
                         const struct sockaddr *, socklen_t
sendmsg     = ssize_t  : int, const struct msghdr *, int
setsockopt  = int      : int, int, int, const void *, socklen_t
shutdown    = int      : int, int
socket      = int      : int, int, int
socketpair  = int      : int, int, int, int $[2]

[functions:x6]
sockatmark  = int      : int

[constants:x5]
SCM_RIGHTS     =

SOCK_DGRAM     =
SOCK_STREAM    =
SOCK_SEQPACKET =

SOL_SOCKET     =

SO_ACCEPTCONN  =
SO_BROADCAST   =
SO_DEBUG       =
SO_DONTROUTE   =
SO_ERROR       =
SO_KEEPALIVE   =
SO_LINGER      =
SO_OOBINLINE   =
SO_RCVBUF      =
SO_RCVLOWAT    =
SO_RCVTIMEO    =
SO_REUSEADDR   =
SO_SNDBUF      =
SO_SNDLOWAT    =
SO_SNDTIMEO    =
SO_TYPE        =

MSG_CTRUNC     =
MSG_DONTROUTE  =
MSG_EOR        =
MSG_OOB        =
MSG_PEEK       =
MSG_TRUNC      =
MSG_WAITALL    =

AF_UNIX        =
AF_UNSPEC      =
AF_INET        =

SHUT_RD        =
SHUT_WR        =
SHUT_RDWR      =

[constants:x6]
SOMAXCONN      =

[constants:x6:ip6]
AF_INET6       =

[constants:x6:raw]
SOCK_RAW       =

[constants:x7]
MSG_NOSIGNAL   =
