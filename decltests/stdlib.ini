[preamble]
header   = stdlib.h
baseline = c89
global =
  typedef void (*cleanup_fn)(void);
  typedef int (*compar_fn)(const void *, const void *);

# LEGACY declarations skipped:
# ttyslot, valloc, ecvt, fcvt, gcvt, rand_r, mktemp

[types:c89]
size_t  = unsigned
wchar_t = integral

[structs:c89]
div_t.quot  = int
div_t.rem   = int
ldiv_t.quot = long
ldiv_t.rem  = long

[structs:c99]
lldiv_t.quot = long long
lldiv_t.rem  = long long

[constants:c89]
RAND_MAX     =
EXIT_SUCCESS =
EXIT_FAILURE =

# "defined as in sys/wait.h, for decoding the return value from system()"
[constants:x5:xsi]
WNOHANG =
WUNTRACED =

[fn_macros:x5:xsi]
WIFEXITED   = int : int
WIFSIGNALED = int : int
WIFSTOPPED  = int : int
WEXITSTATUS = int : int
WTERMSIG    = int : int
WSTOPSIG    = int : int

# MB_CUR_MAX is not required to be constant.
[globals:c89]
MB_CUR_MAX   =

[functions:c89]
atof     = double        : const char *
atoi     = int           : const char *
atol     = long          : const char *
strtod   = double        : const char *, char **
strtol   = long          : const char *, char **, int
strtoul  = unsigned long : const char *, char **, int

rand     = int           : void
srand    = void          : unsigned int

malloc   = void *        : size_t
calloc   = void *        : size_t, size_t
realloc  = void *        : void *, size_t
free     = void          : void *

atexit   = int           : cleanup_fn
exit     = void          : int
abort    = void          : void

getenv   = char *        : const char *
system   = int           : const char *

bsearch  = void *        : const void *, const void *, size_t, size_t, compar_fn
qsort    = void          : void *, size_t, size_t, compar_fn

abs      = int           : int
labs     = long          : long
div      = div_t         : int, int
ldiv     = ldiv_t        : long, long

mblen    = int           : const char *, size_t
mbtowc   = int           : wchar_t *, const char *, size_t
wctomb   = int           : char *, wchar_t
mbstowcs = size_t        : wchar_t *, const char *, size_t
wcstombs = size_t        : char *, const wchar_t *, size_t

[functions:c99]
atoll    = long long     : const char *
strtof   = float         : const char *, char **
strtold  = long double   : const char *, char **
strtoll  = long long     : const char *, char **, int
strtoull = unsigned long long : const char *, char **, int

llabs    = long long : long long
lldiv    = lldiv_t   : long long, long long

_Exit    = void : int

[functions:x5:xsi]
a64l = long   : const char *
l64a = char * : long

initstate = char * : unsigned int, char *, size_t
random    = long   : void
setstate  = char * : char *
srandom   = void   : unsigned int

drand48 = double : void
erand48 = double : unsigned short $[3]
jrand48 = long   : unsigned short $[3]
lcong48 = void   : unsigned short $[7]
lrand48 = long   : void
mrand48 = long   : void
nrand48 = long   : unsigned short $[3]
srand48 = void   : long
seed48  = unsigned short * : unsigned short $[3]

grantpt  = int    : int
unlockpt = int    : int
ptsname  = char * : int
realpath = char * : const char *, char *
putenv   = int    : char *
mkstemp  = int    : char *

# paired with functions in unistd.h - getopt, encrypt respectively
getsubopt = int : char **, char *const *, char **
setkey    = void : const char *

[functions:x6]
setenv   = int : const char *, const char *, int
unsetenv = int : const char *

[functions:x6:adv]
posix_memalign = int : void **, size_t, size_t

[functions:x6:xsi]
posix_openpt = int : int

[functions:x7]
mkdtemp = char * : char *
