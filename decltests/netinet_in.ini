[preamble]
header = netinet/in.h
baseline = x5

[types:x5]
in_port_t   = unsigned
in_addr_t   = unsigned
sa_family_t = unsigned

[types:x6]
uint8_t  = unsigned
uint32_t = unsigned

[types:x6:ip6]

[structs:x5]
s_in_addr.s_addr         = in_addr_t
s_sockaddr_in.sin_family = sa_family_t
s_sockaddr_in.sin_port   = in_port_t
s_sockaddr_in.sin_addr   = struct in_addr
# sin_zero might be char[N] or unsigned char[N]; it doesn't matter,
# because it's exposed padding to make struct sockaddr_in the same
# size as struct sockaddr.  The only thing one should ever do to it is
# clear it.  The somewhat abnormal-looking "void []" makes the code
# generator do the Right Thing.
s_sockaddr_in.sin_zero   = void []

[structs:x6:ip6]
s_ipv6_mreq.ipv6mr_multiaddr = struct in6_addr
s_ipv6_mreq.ipv6mr_interface = unsigned

s_sockaddr_in6.sin6_family   = sa_family_t
s_sockaddr_in6.sin6_port     = in_port_t
s_sockaddr_in6.sin6_flowinfo = uint32_t
s_sockaddr_in6.sin6_addr     = struct in6_addr
s_sockaddr_in6.sin6_scope_id = uint32_t

s_in6_addr.s6_addr           = uint8_t []

[constants:x5]
IPPROTO_IP       =
IPPROTO_ICMP     =
IPPROTO_TCP      =
IPPROTO_UDP      =
INADDR_ANY       = in_addr_t
INADDR_BROADCAST = in_addr_t

[constants:x6]
INET_ADDRSTRLEN = unsigned int

[constants:x6:raw]
IPPROTO_RAW =

[constants:x6:ip6]
IPPROTO_IPV6          =
IPV6_JOIN_GROUP       =
IPV6_LEAVE_GROUP      =
IPV6_MULTICAST_HOPS   =
IPV6_MULTICAST_IF     =
IPV6_MULTICAST_LOOP   =
IPV6_UNICAST_HOPS     =
IPV6_V6ONLY           =
INET6_ADDRSTRLEN      = unsigned int
IN6ADDR_ANY_INIT      = struct in6_addr
IN6ADDR_LOOPBACK_INIT = struct in6_addr

[globals:x6:ip6]
in6addr_any      = struct in6_addr
in6addr_loopback = struct in6_addr

[functions:x5]
htonl = in_addr_t : in_addr_t
ntohl = in_addr_t : in_addr_t
htons = in_port_t : in_port_t
ntohs = in_port_t : in_port_t

[fn_macros:x6:ip6]
IN6_IS_ADDR_UNSPECIFIED  = int : struct in6_addr *
IN6_IS_ADDR_LOOPBACK     = int : struct in6_addr *
IN6_IS_ADDR_MULTICAST    = int : struct in6_addr *
IN6_IS_ADDR_LINKLOCAL    = int : struct in6_addr *
IN6_IS_ADDR_SITELOCAL    = int : struct in6_addr *
IN6_IS_ADDR_V4MAPPED     = int : struct in6_addr *
IN6_IS_ADDR_V4COMPAT     = int : struct in6_addr *
IN6_IS_ADDR_MC_NODELOCAL = int : struct in6_addr *
IN6_IS_ADDR_MC_LINKLOCAL = int : struct in6_addr *
IN6_IS_ADDR_MC_SITELOCAL = int : struct in6_addr *
IN6_IS_ADDR_MC_ORGLOCAL  = int : struct in6_addr *
IN6_IS_ADDR_MC_GLOBAL    = int : struct in6_addr *
