[preamble]
header = sched.h
baseline =

# All components of this file are optional.

# Glossary of module codes:
# PARM = sched_setscheduler, sched_setparm
# PRIO = sched_get_priority_min/max
# RRI = sched_rr_get_interval
# SS = sporadic server scheduling
# YIELD = sched_yield

[types:x5]
pid_t = signed
time_t = integral
timespec = opaque struct

[constants:x5:parm]
SCHED_FIFO     =
SCHED_RR       =
SCHED_OTHER    =

[constants:x6:ss]
SCHED_SPORADIC =

[fields:x6:parm]
s_sched_param.sched_priority        = int

[fields:x6:ss]
s_sched_param.sched_ss_low_priority = int
s_sched_param.sched_ss_repl_period  = struct timespec
s_sched_param.sched_ss_init_budget  = struct timespec
s_sched_param.sched_ss_max_repl     = int

[functions:x5:parm]
sched_getparam         = int : pid_t, struct sched_param *
sched_getscheduler     = int : pid_t
sched_setparam         = int : pid_t, const struct sched_param *
sched_setscheduler     = int : pid_t, int, const struct sched_param *

[functions:x5:prio]
sched_get_priority_max = int : int
sched_get_priority_min = int : int

[functions:x5:rri]
sched_rr_get_interval  = int : pid_t, struct timespec *

[functions:x5:yield]
sched_yield            = int : void
