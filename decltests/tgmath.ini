[preamble]
header = tgmath.h
baseline = c99
includes = math.h complex.h

# The test strategy here is just to attempt to call all of the
# type-generics with argument(s) of type 'long double' and, for those
# that can take a complex argument, also 'complex long double'.  This
# will provoke an error if one of the generics is missing or
# misimplemented.  Using 'double' or 'float' cannot be expected to do
# so, since the generics' names match <math.h>'s names with 'double'
# parameters, so argument promotion would make them appear to work
# even if the generic was absent.

[fn_macros:c99:real]
acos       = long double : long double
asin       = long double : long double
atan       = long double : long double
acosh      = long double : long double
asinh      = long double : long double
atanh      = long double : long double
cos        = long double : long double
sin        = long double : long double
tan        = long double : long double
cosh       = long double : long double
sinh       = long double : long double
tanh       = long double : long double
exp        = long double : long double
log        = long double : long double
pow        = long double : long double, long double
sqrt       = long double : long double
fabs       = long double : long double

atan2      = long double : long double, long double
cbrt       = long double : long double
ceil       = long double : long double
copysign   = long double : long double, long double
erf        = long double : long double
erfc       = long double : long double
exp2       = long double : long double
expm1      = long double : long double
fdim       = long double : long double, long double
floor      = long double : long double
fma        = long double : long double, long double, long double
fmax       = long double : long double, long double
fmin       = long double : long double, long double
fmod       = long double : long double, long double
frexp      = long double : long double, int *
hypot      = long double : long double, long double
ldexp      = long double : long double, int
lgamma     = long double : long double
log10      = long double : long double
log1p      = long double : long double
log2       = long double : long double
logb       = long double : long double
nearbyint  = long double : long double
nextafter  = long double : long double, long double
nexttoward = long double : long double, long double
remainder  = long double : long double, long double
remquo     = long double : long double, long double, int *
rint       = long double : long double
round      = long double : long double
scalbn     = long double : long double, int
scalbln    = long double : long double, long int
tgamma     = long double : long double
trunc      = long double : long double

ilogb      = int : long double
lrint      = long : long double
llrint     = long long : long double


[fn_macros:c99:complex]
acos  = complex long double : complex long double
acos  = complex long double : complex long double
asin  = complex long double : complex long double
atan  = complex long double : complex long double
acosh = complex long double : complex long double
asinh = complex long double : complex long double
atanh = complex long double : complex long double
cos   = complex long double : complex long double
sin   = complex long double : complex long double
tan   = complex long double : complex long double
cosh  = complex long double : complex long double
sinh  = complex long double : complex long double
tanh  = complex long double : complex long double
exp   = complex long double : complex long double
log   = complex long double : complex long double
pow   = complex long double : complex long double, complex long double
sqrt  = complex long double : complex long double
fabs  = complex long double : complex long double

carg  = complex long double : complex long double
cimag = complex long double : complex long double
conj  = complex long double : complex long double
cproj = complex long double : complex long double
creal = complex long double : complex long double
