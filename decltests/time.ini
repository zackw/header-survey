[preamble]
header   = time.h
baseline = c89

[types:c89]
size_t  = unsigned
clock_t = arithmetic
time_t  = arithmetic

[constants:c89]
NULL    = void *

# C89 and C99 specify that all of these have type 'int', but an
# implementation might reasonably pick a different type for some of
# them, whether to save space (sec, min, hour, mday, mon, wday, isdst
# are all packable into 'unsigned char', and yday would fit into a
# 9-bit bitfield) or to extend the range (a 64-bit second-counting
# time_t can reach well past Gregorian year 2,147,485,547) so we don't
# aggressively validate that as we do for e.g. ldiv_t.
[structs:c89]
s_tm.tm_sec   = integral
s_tm.tm_min   = integral
s_tm.tm_hour  = integral
s_tm.tm_mday  = integral
s_tm.tm_mon   = integral
s_tm.tm_year  = integral
s_tm.tm_wday  = integral
s_tm.tm_yday  = integral
s_tm.tm_isdst = integral

[constants:c89]
CLOCKS_PER_SEC = clock_t

[functions:c89]
clock     = clock_t : void
time      = time_t  : time_t *

difftime  = double      : time_t, time_t
mktime    = time_t      : struct tm *
gmtime    = struct tm * : const time_t *
localtime = struct tm * : const time_t *

ctime     = char * : const time_t *
asctime   = char * : const struct tm *
strftime  = size_t : char *, size_t, const char *, const struct tm *
