[preamble]
header   = signal.h
baseline = c89
global =
  typedef void (*sh_type)(int);

# Excluded:
#
# sighold, sigignore, siginterrupt, sigpause, sigrelse, sigset
# obsolescent in Issue 7
#
# bsd_signal obsolescent in Issue 6, removed in 7
#
# sigstack obsolescent in Issue 5, removed in 6
# (struct sigstack "should have been removed" at the same time,
# but wasn't actually till 7).
#
# SIGPOLL, SIGPROF, and si_band are marked as obsolescent (STREAMS)
# in Issue 7, but I'm leaving them in unless/until I find a system
# that actually removed them.

[types:c89]
sig_atomic_t = integral

[types:x5]
pid_t = integral
sigset_t = opaque

[types:x5:rts]
pthread_attr_t = opaque

[types:x5:thr]
pthread_t = opaque

[types:x5:xsi]
uid_t = integral

[types:x5:ucx]
# this is a struct with user-visible contents, but what those
# contents are is completely system-dependent.
mcontext_t = opaque

[structs:x5]
s_sigaction.sa_handler   = sh_type
s_sigaction.sa_sigaction = void (*$)(int, siginfo_t *, void *)
s_sigaction.sa_mask      = O:sigset_t
s_sigaction.sa_flags     = int

siginfo_t.si_signo = int
siginfo_t.si_code  = int

[structs:x5:rts]
s_sigevent.sigev_notify            = int
s_sigevent.sigev_signo             = int
s_sigevent.sigev_notify_function   = void (*$)(union sigval)
s_sigevent.sigev_notify_attributes = pthread_attr_t *
s_sigevent.sigev_value             = O:union sigval

siginfo_t.si_value = O:union sigval
u_sigval.sival_int = int
u_sigval.sival_ptr = void *

# tv_nsec is spec'd as "long" but the ABI may have to use something
# else (e.g. to keep the structure the same size when 32- and 64-bit
# ABIs on the same OS have different widths of 'long'); so we just
# check it's an integral type.
#
# Similarly, signal.h might not expose time_t, even though it's
# required to expose struct timespec under this option.
s_timespec.tv_sec  = integral
s_timespec.tv_nsec = integral

[structs:x5:xsi]
stack_t.ss_sp       = void *
stack_t.ss_size     = size_t
stack_t.ss_flags    = int

siginfo_t.si_errno  = int
siginfo_t.si_pid    = pid_t
siginfo_t.si_uid    = uid_t
siginfo_t.si_addr   = void *
siginfo_t.si_status = int
siginfo_t.si_band   = long

[structs:x5:ucx]
ucontext_t.uc_link     = ucontext_t *
ucontext_t.uc_sigmask  = O:sigset_t
ucontext_t.uc_stack    = O:stack_t
ucontext_t.uc_mcontext = O:mcontext_t

[constants:c89]
SIG_DFL = sh_type
SIG_IGN = sh_type
SIG_ERR = sh_type

SIGABRT =
SIGFPE  =
SIGILL  =
SIGINT  =
SIGSEGV =
SIGTERM =

[constants:x5]
SIG_HOLD     = sh_type

SIGALRM      =
SIGBUS       =
SIGCHLD      =
SIGCONT      =
SIGHUP       =
SIGKILL      =
SIGPIPE      =
SIGQUIT      =
SIGSTOP      =
SIGTSTP      =
SIGTTIN      =
SIGTTOU      =
SIGURG       =
SIGUSR1      =
SIGUSR2      =

SA_NOCLDSTOP =

SIG_BLOCK    =
SIG_UNBLOCK  =
SIG_SETMASK  =

SI_USER      =
SI_TIMER     =
SI_ASYNCIO   =
SI_MESGQ     =

[constants:x5:rts]
SIGEV_NONE   =
SIGEV_THREAD =
SIGEV_SIGNAL =
SI_QUEUE     =

[constants:x5:xsi]
SIGPOLL       =
SIGPROF       =
SIGSYS        =
SIGTRAP       =
SIGVTALRM     =
SIGXCPU       =
SIGXFSZ       =

SA_ONSTACK    =
SA_RESETHAND  =
SA_RESTART    =
SA_SIGINFO    =
SA_NOCLDWAIT  =
SA_NODEFER    =

SS_DISABLE    =
SS_ONSTACK    =
MINSIGSTKSZ   =
SIGSTKSZ      =

ILL_ILLOPC    =
ILL_ILLOPN    =
ILL_ILLADR    =
ILL_ILLTRP    =
ILL_PRVOPC    =
ILL_PRVREG    =
ILL_COPROC    =
ILL_BADSTK    =

FPE_INTDIV    =
FPE_INTOVF    =
FPE_FLTDIV    =
FPE_FLTOVF    =
FPE_FLTUND    =
FPE_FLTRES    =
FPE_FLTINV    =
FPE_FLTSUB    =

SEGV_MAPERR   =
SEGV_ACCERR   =

BUS_ADRALN    =
BUS_ADRERR    =
BUS_OBJERR    =

TRAP_BRKPT    =
TRAP_TRACE    =

CLD_EXITED    =
CLD_KILLED    =
CLD_DUMPED    =
CLD_TRAPPED   =
CLD_STOPPED   =
CLD_CONTINUED =

POLL_IN       =
POLL_OUT      =
POLL_MSG      =
POLL_ERR      =
POLL_PRI      =
POLL_HUP      =

# constants, but not necessarily compile-time constants
[globals:x5:rts]
SIGRTMIN =
SIGRTMAX =

[functions:c89]
raise  = int:int
signal = sh_type : int, sh_type

[functions:x5]
kill        = int : pid_t, int
sigaction   = int : int, const struct sigaction *, struct sigaction *
sigaddset   = int : sigset_t *, int
sigdelset   = int : sigset_t *, int
sigemptyset = int : sigset_t *
sigfillset  = int : sigset_t *
sigismember = int : const sigset_t *, int
sigpending  = int : sigset_t *
sigprocmask = int : int, const sigset_t *, sigset_t *
sigsuspend  = int : const sigset_t *
sigwait     = int : const sigset_t *, int *

[functions:x5:rts]
sigqueue     = int : pid_t, int, const union sigval
sigtimedwait = int : const sigset_t *, siginfo_t *, const struct timespec *
sigwaitinfo  = int : const sigset_t *, siginfo_t *

[functions:x5:thr]
pthread_kill    = int : pthread_t, int
pthread_sigmask = int : int, const sigset_t *, sigset_t *

[functions:x5:xsi]
killpg      = int : pid_t, int
sigaltstack = int : const stack_t *, stack_t *

[functions:x7]
psiginfo = void : const siginfo_t *, const char *
psignal  = void : int, const char *
