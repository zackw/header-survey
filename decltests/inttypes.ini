[preamble]
header = inttypes.h
baseline = c99
includes = stdint.h
extra_includes = stddef.h

# There is no way to validate the *contents* of the PRI* and SCN*
# macros in a compile test, so we just make sure they're there, and
# do in fact expand to string literals, for all the mandatory types.
# We do not permit the implementation to take advantage of the
# "unless the implementation does not have a suitable fscanf length
# modifier for the type" qualification, because I don't see any
# excuse for that, do you?
[constants:c99]
PRIdLEAST8 = str
PRIiLEAST8 = str
PRIoLEAST8 = str
PRIuLEAST8 = str
PRIxLEAST8 = str
PRIXLEAST8 = str

PRIdLEAST16 = str
PRIiLEAST16 = str
PRIoLEAST16 = str
PRIuLEAST16 = str
PRIxLEAST16 = str
PRIXLEAST16 = str

PRIdLEAST32 = str
PRIiLEAST32 = str
PRIoLEAST32 = str
PRIuLEAST32 = str
PRIxLEAST32 = str
PRIXLEAST32 = str

PRIdLEAST64 = str
PRIiLEAST64 = str
PRIoLEAST64 = str
PRIuLEAST64 = str
PRIxLEAST64 = str
PRIXLEAST64 = str

PRIdFAST8 = str
PRIiFAST8 = str
PRIoFAST8 = str
PRIuFAST8 = str
PRIxFAST8 = str
PRIXFAST8 = str

PRIdFAST16 = str
PRIiFAST16 = str
PRIoFAST16 = str
PRIuFAST16 = str
PRIxFAST16 = str
PRIXFAST16 = str

PRIdFAST32 = str
PRIiFAST32 = str
PRIoFAST32 = str
PRIuFAST32 = str
PRIxFAST32 = str
PRIXFAST32 = str

PRIdFAST64 = str
PRIiFAST64 = str
PRIoFAST64 = str
PRIuFAST64 = str
PRIxFAST64 = str
PRIXFAST64 = str

PRIdMAX = str
PRIiMAX = str
PRIoMAX = str
PRIuMAX = str
PRIxMAX = str
PRIXMAX = str

SCNdLEAST8 = str
SCNiLEAST8 = str
SCNoLEAST8 = str
SCNuLEAST8 = str
SCNxLEAST8 = str

SCNdLEAST16 = str
SCNiLEAST16 = str
SCNoLEAST16 = str
SCNuLEAST16 = str
SCNxLEAST16 = str

SCNdLEAST32 = str
SCNiLEAST32 = str
SCNoLEAST32 = str
SCNuLEAST32 = str
SCNxLEAST32 = str

SCNdLEAST64 = str
SCNiLEAST64 = str
SCNoLEAST64 = str
SCNuLEAST64 = str
SCNxLEAST64 = str

SCNdFAST8 = str
SCNiFAST8 = str
SCNoFAST8 = str
SCNuFAST8 = str
SCNxFAST8 = str

SCNdFAST16 = str
SCNiFAST16 = str
SCNoFAST16 = str
SCNuFAST16 = str
SCNxFAST16 = str

SCNdFAST32 = str
SCNiFAST32 = str
SCNoFAST32 = str
SCNuFAST32 = str
SCNxFAST32 = str

SCNdFAST64 = str
SCNiFAST64 = str
SCNoFAST64 = str
SCNuFAST64 = str
SCNxFAST64 = str

SCNdMAX = str
SCNiMAX = str
SCNoMAX = str
SCNuMAX = str
SCNxMAX = str

[constants:c99:optional]
PRId8 = str
PRIi8 = str
PRIo8 = str
PRIu8 = str
PRIx8 = str
PRIX8 = str

PRId16 = str
PRIi16 = str
PRIo16 = str
PRIu16 = str
PRIx16 = str
PRIX16 = str

PRId32 = str
PRIi32 = str
PRIo32 = str
PRIu32 = str
PRIx32 = str
PRIX32 = str

PRId64 = str
PRIi64 = str
PRIo64 = str
PRIu64 = str
PRIx64 = str
PRIX64 = str

PRIdPTR = str
PRIiPTR = str
PRIoPTR = str
PRIuPTR = str
PRIxPTR = str
PRIXPTR = str

SCNd8 = str
SCNi8 = str
SCNo8 = str
SCNu8 = str
SCNx8 = str

SCNd16 = str
SCNi16 = str
SCNo16 = str
SCNu16 = str
SCNx16 = str

SCNd32 = str
SCNi32 = str
SCNo32 = str
SCNu32 = str
SCNx32 = str

SCNd64 = str
SCNi64 = str
SCNo64 = str
SCNu64 = str
SCNx64 = str

SCNdPTR = str
SCNiPTR = str
SCNoPTR = str
SCNuPTR = str
SCNxPTR = str

[structs:c99]
imaxdiv_t.quot = intmax_t
imaxdiv_t.rem  = intmax_t

[functions:c99]
imaxabs   =  intmax_t : intmax_t
imaxdiv   = imaxdiv_t : intmax_t, intmax_t
strtoimax =  intmax_t : const char *, char **, int
strtoumax = uintmax_t : const char *, char **, int
wcstoimax =  intmax_t : const wchar_t *, wchar_t **, int
wcstoumax = uintmax_t : const wchar_t *, wchar_t **, int

# you would think this would be in C99 given wcsto* but it isn't.
[types:x7]
wchar_t = integral
