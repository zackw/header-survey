[preamble]
header = threads.h
baseline = c2011
includes = time.h

[types:c2011]
cnd_t        = opaque
thrd_t       = opaque
tss_t        = opaque
mtx_t        = opaque
# void (*)(void *)
tss_dtor_t   = scalar
# int (*)(void *)
thrd_start_t = scalar
once_flag    = opaque

[constants:c2011]
ONCE_FLAG_INIT = once_flag

TSS_DESTRUCTOR_ITERATIONS =
mtx_plain     =
mtx_recursive =
mtx_timed     =
thrd_timedout =
thrd_success  =
thrd_busy     =
thrd_error    =
thrd_nomem    =

[functions:c2011]
call_once = void : once_flag, void (*$)(void)

cnd_broadcast = int  : cnd_t *
cnd_destroy   = void : cnd_t *
cnd_init      = int  : cnd_t *
cnd_signal    = int  : cnd_t *
cnd_timedwait = int  : cnd_t *, mtx_t *, const struct timespec *
cnd_wait      = int  : cnd_t *, mtx_t *

mtx_destroy   = void : mtx_t *
mtx_init      = int  : mtx_t *, int
mtx_lock      = int  : mtx_t *
mtx_timedlock = int  : mtx_t *, const struct timespec *
mtx_trylock   = int  : mtx_t *
mtx_unlock    = int  : mtx_t *

thrd_create   = int    : thrd_t *, thrd_start_t, void *
thrd_current  = thrd_t : void
thrd_detach   = int    : thrd_t
thrd_equal    = int    : thrd_t, thrd_t
thrd_exit     = void   : int
thrd_join     = int    : thrd_t, int *
thrd_sleep    = int    : const struct timespec *, struct timespec *
thrd_yield    = void   : void

tss_create    = int    : tss_t *, tss_dtor_t
tss_delete    = void   : tss_t
tss_get       = void * : tss_t
tss_set       = int    : tss_t, void *

[special_decls:c2011]
_Thread_local = static _Thread_local int $
thread_local  = static  thread_local int $
