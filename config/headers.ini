# -*- encoding: us-ascii -*-

# Copyright 2013-2014 Zack Weinberg <zackw@panix.com> and other contributors.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# There is NO WARRANTY.

## Headers to Survey
## -----------------
##
## This file defines the set of headers which :command:`survey-scan`
## will probe for; it also categorizes them by standard of origin.
##
## The ``[standards]`` section is the master index for this file.
## Each key is the name of another section, containing a list of
## headers defined by a particular standard.  Its value is a
## human-readable label for that standard, which will be used in the
## generated survey report.  The two-digit number at the beginning of
## each label defines the desired sort order in the survey report; it
## will not be displayed.
##
## All other sections in this file simply contain a list of headers
## defined by a particular standard.  If more than one standard
## specifies content for some header, the header should be listed
## under the *oldest* such standard.  The key is the name of the
## header, and the value is a short human-readable description (taken
## from the relevant standard if possible).  The special DESC key
## gives a short description of that section, with more detail than
## will fit in the label.
##
## The "Nonstandard but widespread", "Kernel-internal dependencies",
## and "Obsolete" categories are somewhat arbitrary.  We welcome
## feedback on headers missing from those sections, or misfiled.  We
## would also consider including headers from more standards, as long
## as those standards contribute to what is normally considered the
## *C library's* responsibility.  (For instance, we are not going
## to cover the X11 headers, even though they *were* a major point of
## contention in the Unix wars.)
##
## .. warning::
##
##   Please do not modify this file without discussion; changes here
##   potentially invalidate *all* existing inventories.

# Note that because :command:`survey-scan` needs to be
# backward-compatible all the way to Python 2.0, we cannot take
# advantage of RawConfigParser's allow_no_value option (which would
# eliminate the need for all the colons on the header file names) nor
# can we rely on the parser preserving the order of keys within the
# file.

[standards]
c1989:        01. ISO C1990
c1999:        02. ISO C1999
c2011:        03. ISO C2011
tr18037:      04. TR 18037 (embedded C)
openmp:       05. OpenMP
posix1996:    10. POSIX.1-1996
posix2001:    11. POSIX.1-2001 base
posix2001opt: 12. POSIX.1-2001 optional
ucom:         20. Nonstandard but widespread
sunrpc:       90. Sun RPC
kernel:       95. Kernel-internal dependencies
obsolete:     99. Obsolete

[c1989]
DESC:
  These headers were mandated by the original 1989 C standard, or the
  1995 amendment thereto.

assert.h: Diagnostics
ctype.h:  Character classification
errno.h:  Error codes
float.h:  Characteristics of floating types
iso646.h: Alternative spellings of operators
limits.h: Sizes of integer types
locale.h: Localization
math.h:   Mathematical functions
setjmp.h: Nonlocal jumps
signal.h: Signal handling
stdarg.h: Variable arguments
stddef.h: Common definitions
stdio.h:  File I/O
stdlib.h: General utilities
string.h: String handling
time.h:   Date and time
wchar.h:  Multibyte and wide character utilities
wctype.h: Wide character classification

[c1999]
DESC:
  These headers were added to the C standard in its 1999 revision.

complex.h:  Complex arithmetic
fenv.h:     Floating-point environment
inttypes.h: Utilities for specific-size integer types
stdbool.h:  Boolean type and values
stdint.h:   Specific-size integer types
tgmath.h:   Type-generic math functions

[c2011]
DESC:
  These headers were added to the C standard in its 2011 revision.
  Some of them were originally in TR 18037 (see below).

stdalign.h:    Memory alignment
stdatomic.h:   Atomic operations
stdnoreturn.h: Functions that do not return
threads.h:     Multithreading
uchar.h:       Unicode utilities

[tr18037]
DESC:
  These headers are specified in ISO/IEC TR 18037, an optional
  extension to C1999/C2011 to facilitate coding for embedded processors.

iohw.h:   Low-level device I/O
stdfix.h: Fixed-point arithmetic

[openmp]
DESC:
  This header is specified by OpenMP, a bolt-on language specification
  for structured parallel programming.

omp.h:  Structured parallel programming

[posix1996]
DESC:
  These headers were mandated by POSIX.1-1996 and/or POSIX.2-1992
  but not by C89, and were not demoted to an optional module in
  POSIX.1-2001 or obsoleted in POSIX.1-2008.

dirent.h:      Directory contents
fcntl.h:       File I/O control operations
fnmatch.h:     File name patterns
glob.h:        Pathname pattern matching
grp.h:         Access control group database
netdb.h:       Hostname, protocol, and service lookup
pwd.h:         User database
regex.h:       Regular expressions
strings.h:     Additional string handling functions
tar.h:         ``tar`` archive file format
termios.h:     Terminal I/O control operations
unistd.h:      Additional general utilities
wordexp.h:     Bourne shell-like word expansion
netinet/in.h:  Socket addresses and constants for IPv4 and IPv6
netinet/tcp.h: TCP protocol constants and socket options
sys/mman.h:    Memory-mapped I/O
sys/stat.h:    File metadata operations
sys/times.h:   File access times
sys/types.h:   Common data type definitions
sys/utsname.h: Operating system identification
sys/wait.h:    Waiting for child processes

[posix2001]
DESC:
  These headers were added to the mandatory base component of POSIX
  in the 2001 revision, and are not also part of C99.

poll.h:       I/O multiplexing (``poll``)
arpa/inet.h:  Miscellaneous networking utilities
net/if.h:     Network interfaces
sys/select.h: I/O multiplexing (``select``)
sys/socket.h: Network I/O
sys/time.h:   Additional time-related utilities

[posix2001opt]
DESC:
  These headers are optional components of POSIX.1-2001, and were not
  obsoleted in POSIX.1-2008.  POSIX.1-2008 makes many of these headers
  mandatory, but does not add any entirely new headers.

aio.h:          Asynchronous I/O
cpio.h:         ``cpio`` archive file format
dlfcn.h:        Dynamic loading of code modules
fmtmsg.h:       Formatted error messages
ftw.h:          File tree traversal (POSIX)
iconv.h:        Character encoding conversion
langinfo.h:     Fine-grained localization information
libgen.h:       File name manipulation
monetary.h:     Formatting of monetary quantities
mqueue.h:       Message queues
nl_types.h:     Message translation catalogues
pthread.h:      Multithreading
sched.h:        Execution scheduling
semaphore.h:    Semaphores
spawn.h:        Process creation
syslog.h:       Error logging
utmpx.h:        User login database
sys/ipc.h:      "System V" inter-process communication
sys/msg.h:      "System V" message queues
sys/resource.h: Process resource limits
sys/sem.h:      "System V" semaphores
sys/shm.h:      "System V" shared memory regions
sys/statvfs.h:  Filesystem metadata
sys/uio.h:      Scatter-gather I/O
sys/un.h:       Socket addresses for local IPC

[ucom]
DESC:
  These headers were never standardized, but are common enough to be
  worth probing for anyway.  Curses *is* standardized but not as part
  of POSIX(?), I need to do more research before moving that to a more
  appropriate section.

a.out.h:            ``a.out`` executable file format
alloca.h:           Stack-based dynamic memory allocation
ar.h:               ``ar`` library file format
curses.h:           Text-based user interface library
elf.h:              ELF executable file format
endian.h:           Order of bytes in memory
err.h:              Formatted error messages (BSD)
fstab.h:            Database of configured file systems
fts.h:              File tree traversal (BSD)
getopt.h:           Command line option parsing
ifaddrs.h:          Network interface enumeration
lastlog.h:          User login database
link.h:             Dynamic linker utilities
malloc.h:           Additional dynamic memory allocation utilities
mntent.h:           Database of mounted file systems
paths.h:            Well-known pathnames
resolv.h:           Low-level DNS queries
stab.h:             ``stab`` debugging record format
sysexits.h:         Conventions for process exit codes
thread_db.h:        Debugger hooks for multithreaded programs
unctrl.h:           Printable representations of control characters
arpa/ftp.h:         FTP protocol constants
arpa/nameser.h:     DNS protocol constants
arpa/telnet.h:      Telnet protocol constants
arpa/tftp.h:        TFTP protocol constants
net/if_arp.h:       ARP protocol constants?
net/if_dl.h:        Link-layer socket addresses?
net/ppp_defs.h:     PPP protocol constants?
net/route.h:        Control network routing?
netinet/icmp6.h:    ICMPv6 protocol constants
netinet/if_ether.h: Ethernet socket addresses?
netinet/igmp.h:     IGMP protocol constants
netinet/ip.h:       IPv4 protocol constants and socket options
netinet/ip6.h:      IPv6 protocol constants and socket options
netinet/ip_icmp.h:  ICMPv4 protocol constants
netinet/udp.h:      UDP protocol constants and socket options
protocols/routed.h: RIP protocol constants
protocols/rwhod.h:  ``rwho`` protocol constants
protocols/timed.h:  Time Synchronization Protocol constants
sys/acct.h:         Per-user resource accounting
sys/file.h:         File I/O control (BSD)
sys/ioctl.h:        Device I/O control
sys/mount.h:        Mounting and unmounting file systems
sys/mtio.h:         Tape I/O control
sys/procfs.h:       Process information
sys/reboot.h:       Rebooting
sys/regset.h:       ???
sys/syscall.h:      System call numbers
sys/timex.h:        ???

[sunrpc]
DESC:
  Sun RPC is the transport layer underlying NFS and NIS.  Historically
  it was provided by the C library, but e.g. glibc 2.14+ label it as
  offered for backward compatibility only (applications are encouraged
  to migrate to TIRPC, a separate library).  Thus we treat it as just
  one step shy of obsolete.

rpc/auth.h:       Sun RPC authentication
rpc/auth_des.h:   Sun RPC authentication (DES)
rpc/auth_unix.h:  Sun RPC authentication (Unix)
rpc/clnt.h:       Sun RPC client interfaces
rpc/des_crypt.h:  DES cryptography utilities
rpc/key_prot.h:   ???
rpc/pmap_clnt.h:  Portmapper client definitions
rpc/pmap_prot.h:  Portmapper local protocol definitions
rpc/pmap_rmt.h:   Portmapper remote protocol definitions
rpc/rpc.h:        Sun RPC
rpc/rpc_msg.h:    Sun RPC message format
rpc/svc.h:        RPC server interfaces
rpc/svc_auth.h:   RPC authentication (server side)
rpc/types.h:      Sun RPC shared type definitions
rpc/xdr.h:        Sun RPC external data representation
rpcsvc/bootparam_prot.h: Sun RPC boot parameters protocol definition
rpcsvc/mount.h:          NFS mount protocol definition
rpcsvc/nfs_prot.h:       NFS protocol definition
rpcsvc/nis.h:            NIS protocol definition
rpcsvc/nislib.h:         NIS protocol utilities?
rpcsvc/nlm_prot.h:       NFSv4 lock manager protocol definition
rpcsvc/rex.h:            Sun RPC remote command execution protocol definition
rpcsvc/rquota.h:         NFS quota protocol definition
rpcsvc/rstat.h:          Sun RPC remote system statistics protocol definition
rpcsvc/sm_inter.h:       Sun RPC remote system monitoring protocol definition
rpcsvc/spray.h:          Sun RPC packet-spraying protocol definition
rpcsvc/yp_prot.h:        YP protocol definition
rpcsvc/ypclnt.h:         YP client utilities
rpcsvc/yppasswd.h:       YP-based user database

[kernel]
DESC:
  These are supposedly kernel-internal headers, but on some systems,
  they must be included by a user space program in order to make
  another header (that *is* intended for user space consumption)
  compile without error.  They should not otherwise be used.

netinet/in_systm.h:    Kernel-internal network-related declarations
sys/queue.h:           Kernel data structure utility macros (BSD)
sys/socketvar.h:       Kernel-internal socket structures (?)
sys/ucred.h:           Kernel-internal user credential structures
sys/user.h:            Kernel-internal process structures

[obsolete]
DESC:
  These headers were once specified by POSIX but are now officially
  obsolete; or they were at one time the interface you had to use on
  some Unixes but are now superseded by POSIX or ISO C headers; or
  they have never been part of any standard and are superseded by
  third-party libraries.

direct.h:              Directory contents (obsolete)
memory.h:              Memory block operations (obsolete)
ndbm.h:                B-trees on disk (BSD)
ndir.h:                Directory contents (obsolete)
re_comp.h:             Regular expressions (obsolete)
regexp.h:              Regular expressions (obsolete)
search.h:              Generic data structures in memory (BSD)
sgtty.h:               Terminal I/O (obsolete)
stropts.h:             STREAMS?
term.h:                Terminal I/O (obsolete)
termcap.h:             Terminal capability database (obsolete)
termio.h:              Terminal I/O (obsolete)
trace.h:               ???
ulimit.h:              Process resource limits (obsolete)
ucontext.h:            Cooperative task switching (obsolete)
utime.h:               File access times (obsolete)
utmp.h:                User login database (obsolete)
varargs.h:             Variable arguments (obsolete)
xti.h:                 STREAMS?
arpa/nameser_compat.h: DNS protocol constants (obsolete)
sys/dir.h:             Directory contents (obsolete)
sys/errno.h:           Error codes (old name)
sys/fcntl.h:           File I/O control operations (old name)
sys/ndir.h:            Directory contents (obsolete)
sys/param.h:           System configuration parameters (BSD)
sys/poll.h:            I/O multiplexing (``poll``) (old name)
sys/ptem.h:            ???
sys/signal.h:          Signal handling (old name)
sys/statfs.h:          Filesystem metadata (obsolete)
sys/stream.h:          STREAMS?
sys/syslog.h:          Error logging (old name)
sys/termios.h:         Terminal I/O (old name)
sys/timeb.h:           ???
sys/ttold.h:           Terminal I/O (obsolete)
sys/ucontext.h:        Cooperative task switching (old name)?
sys/unistd.h:          Additional general utilities (old name)
