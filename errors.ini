# -*- encoding: utf-8 -*-

# Copyright 2013 Zack Weinberg <zackw@panix.com> and other contributors.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# There is NO WARRANTY.

# This file specifies errors.  "Errors", in this case, means a
# situation where a header fails to compile in isolation, and this is
# not correctable by either of the techniques offered in prereqs.ini.
# An error is not necessarily a bug; one of the most commonly
# encountered errors is that modern versions of GCC don't support
# <varargs.h>, but do so by shipping a stub header that
# unconditionally fails the compilation, rather than by omitting the
# header altogether.
#
# There is one section per error.  The section name is the codeword
# that will be written to the inventory as a $E line.  There are two
# required entries in each section: "regexp" specifies a regular
# expression used to detect the error, and "desc" is an HTML fragment
# that will be used to describe the error in the generated table (this
# should be a complete sentence).
#
# Regular expressions use the syntax understood by Python 2.0:
# http://docs.python.org/release/2.0/lib/re-syntax.html
#
# All regular expressions are compiled in VERBOSE mode, which means:
#
#   Whitespace within the pattern is ignored, except when in a
#   character class or preceded by an unescaped backslash, and, when a
#   line contains a "#" neither in a character class or preceded by an
#   unescaped backslash, all characters from the leftmost such "#"
#   through the end of the line are ignored.
#
# and then applied using re.search() to each individual line of the
# diagnostics, in isolation.  The first match wins.
#
# Most errors occur only in one specific header.  If you provide a
# "header" entry, its value is a space-separated list of headers, and
# the error will be considered only for those headers.
#
# Some errors are not complete showstoppers for use of a header.
# If a section is marked "caution = 1" then the error is considered
# nonfatal, unless it occurs in all test modes.

# generic problems
[legacy_type_decls]
caution = 1
regexp =
  \b(?:(?:quad|fsid|daddr|caddr|u_(?:int(?:8|16|32|64)|quad))_t
      |u_?(?:char|short|int|long))\b
desc =
  Uses legacy typedefs that <code>sys/types.h</code> does not provide
  in conformance mode.

[sys_queue_macros]
caution = 1
regexp = \b(
    CIRCLEQ_(?:E(?:(?:MPT|NTR)Y)|F(?:IRST|OREACH(?:_REVERSE)?)
             | HEAD(?:_INITIALIZER)?|IN(?:IT|SERT_(?:AFTER|BEFORE|HEAD|TAIL))
             | L(?:AST|OOP_(?:NEXT|PREV))|NEXT|PREV|REMOVE)
  | LIST_(?:E(?:(?:MPT|NTR)Y)|F(?:IRST|OREACH(?:_SAFE)?)|HEAD(?:_INITIALIZER)?
          | IN(?:IT|SERT_(?:AFTER|BEFORE|HEAD))|NEXT|REMOVE)
  | QUEUEDEBUG_(?:CIRCLEQ_(?:ELM|HEAD|POSTREMOVE)
                | LIST_(?:INSERT_HEAD|OP|POSTREMOVE)
                | TAILQ_(?:INSERT_(?:HEAD|TAIL)|OP|P(?:(?:OST|RE)REMOVE)))
  | S(?:IMPLEQ_(?:CONCAT|E(?:(?:MPT|NTR)Y)|F(?:IRST|OREACH(?:_SAFE)?)
                | HEAD(?:_INITIALIZER)?|IN(?:IT|SERT_(?:AFTER|HEAD|TAIL))
                | LAST|NEXT|REMOVE(?:_HEAD)?)
      | LIST_(?:E(?:(?:MPT|NTR)Y)|F(?:IRST|OREACH(?:_SAFE)?)
              | HEAD(?:_INITIALIZER)?|IN(?:IT|SERT_(?:AFTER|HEAD))
              | NEXT|REMOVE(?:_(?:AFTER|HEAD))?)
      | TAILQ_(?:CONCAT|E(?:(?:MPT|NTR)Y)|F(?:IRST|OREACH(?:_SAFE)?)
               | HEAD(?:_INITIALIZER)?|IN(?:IT|SERT_(?:AFTER|HEAD|TAIL))
               | LAST|NEXT|REMOVE(?:_HEAD)?))
  | TAILQ_(?:CONCAT|E(?:(?:MPT|NTR)Y)
           | F(?:IRST|OREACH(?:_(?:(?:REVERS(?:E_SAF)?|SAF)E))?)
           | HEAD(?:_INITIALIZER)?|IN(?:IT|SERT_(?:AFTER|BEFORE|HEAD|TAIL))
           | LAST|NEXT|PREV|REMOVE)
  | _TAILQ_(?:ENTRY|HEAD)
 )\b
desc =
  Uses structure-defining macros from <code>sys/queue.h</code> without
  including it.

# problems with specific headers
[varargs_unimpl]
header = varargs.h
regexp = \#error\b .* \bstdarg\.h\b
desc =
  Explicitly unimplemented: contains only an <code>#error</code> directive
  telling the programmer to use <code>stdarg.h</code> instead.

[malloc_unimpl]
header = malloc.h
regexp = \#error\b .* \bstdlib\.h\b
desc =
  Explicitly unimplemented: contains only an <code>#error</code> directive
  telling the programmer to use <code>stdlib.h</code> instead.

[ucontext_deprecated]
header = ucontext.h
regexp = \#error\b .* \bdeprecated\b
desc =
  This OS deprecates <code>ucontext.h</code> and issues an <code>#error</code>
  if it is used without defining <code>_XOPEN_SOURCE</code>.

[thread_db_needs_struct_fq]
caution = 1
header = thread_db.h
regexp = \bprocfs_isa\b .* \bincomplete\b
desc =
  This header requires a definition of <code>struct fq</code>, which is in
  <code>sys/regset.h</code>, which cannot be used in conformance mode
  because it uses legacy typedefs that are unavailable in conformance mode.

[sys_dir_deprecated]
header = sys/dir.h
regexp = \#warning\b .* \bdirent\.h\b
desc =
  This obsolete header generates an unconditional <code>#warning</code>
  telling the programmer to use <code>dirent.h</code> instead.

[old_terminal_api_deprecated]
header = sys/termios.h sgtty.h
regexp = \#warning\b .* \btermios\.h\b
desc =
  This obsolete header generates an unconditional <code>#warning</code>
  telling the programmer to use <code>termios.h</code> instead.

[sys_timeb_deprecated]
header = sys/timeb.h
regexp = \#warning\b .* \bdeprecated\b
desc =
  This header generates an unconditional <code>#warning</code>s telling
  the programmer that it is obsolete.

[sys_socketvar_sotimeq_hash]
header = sys/socketvar.h
regexp = array\ type\ has\ incomplete\ element\ type
desc =
  Attempts to declare <code>extern struct sotimeq sotimeq_hash[];</code>
  with <code>struct sotimeq</code> an incomplete type; this is invalid.
  The necessary structure definition is immediately below the offending
  declaration.

[rpcsvc_mount_fhandle_t]
header = rpcsvc/mount.h
regexp = fhandle_t
desc =
  Contains declarations depending on a typedef, <code>fhandle_t</code>,
  which is only defined in what appear to be private kernel headers.
  Other OSes define this type in this header.

[regexp_return_makes_pointer]
header = regexp.h
regexp = return\ makes\ pointer\ from\ integer\ without\ a\ cast
desc =
  Incorrect use of <code>RETURN()</code> instead of <code>ERROR()</code>
  in the embedded code in this header.

[nameser_duplicate_members]
caution = 1
header = arpa/nameser_compat.h arpa/nameser.h resolv.h
regexp = duplicate\ member\ .(?:rd|tc|aa|opcode|qr|rcode|cd|ad|unused|ra)
desc =
  Structure definition depending on unprefixed <code>BYTE_ORDER</code>,
  which is not available in conformance mode.

[net_needs_sockaddr_storage]
caution = 1
header = net/if.h netinet/if_ether.h
regexp = \bincomplete\b .* 
         \b(?:lnr_addr|sa_addr|slr_src|slr_grp|ifi_lastchange|ifta_[sd]addr)\b
       | \b(?:lnr_addr|sa_addr|slr_src|slr_grp|ifi_lastchange|ifta_[sd]addr)\b
         .* \bincomplete\b
desc =
  Structure definition depending on <code>struct sockaddr_storage</code>,
  which is provided by <code>sys/socket.h</code>, but unavailable in
  conformance mode (because this system does not conform to POSIX.1-2001).

[net_needs_in6_addr]
caution = 1
header = netinet/icmp6.h netinet/ip6.h
regexp = \bincomplete\b .* 
         \b(?:icmp6m_group|nd_(?:(?:ns|na|rd)_target|rd_dst|opt_pi_prefix)
              |ip6_(?:src|dst))\b
       | \b(?:icmp6m_group|nd_(?:(?:ns|na|rd)_target|rd_dst|opt_pi_prefix)
              |ip6_(?:src|dst))\b
         .* \bincomplete\b
desc =
  Structure definition depending on <code>struct in6_addr</code>,
  which is provided by <code>netinet/in.h</code>, but unavailable in
  conformance mode (because this system does not conform to POSIX.1-2001).

[netinet_if_ether_ac_if_incomplete]
caution = 1
header = netinet/if_ether.h
regexp = \bincomplete\b.*\bac_if\b|\bac_if\b.*incomplete\b
desc =
  Structure definition depending on <code>struct ifnet</code>, which is
  provided by <code>net/if.h</code>, but unavailable in conformance mode.

[protocols_timed_MAXHOSTNAMELEN_unavailable]
caution = 1
header = protocols/timed.h
regexp = \bMAXHOSTNAMELEN\b
desc =
  Depends on the constant <code>MAXHOSTNAMELEN</code>, which is provided
  by <code>netdb.h</code>, but unavailable in conformance mode.

[sys_procfs_sigaltstack_unavailable]
caution = 1
header = sys/procfs.h
regexp = \bincomplete\b.*\bpr_altstack\b|\bpr_altstack\b.*\bincomplete\b
desc =
  Depends on <code>struct sigaltstack</code>, a compatibility name for
  <code>stack_t</code>, which is provided by <code>signal.h</code>, but
  unavailable in conformance mode.

[sys_socketvar_kfpu_or_label_t_unavailable]
header = sys/socketvar.h
regexp = \bkfpu_t\b|\blabel_t\b
caution = 1
desc =
  Indirectly depends on type definitions for <code>kfpu_t</code> and/or
  <code>label_t</code>, which are unavailable in conformance mode.

[sys_user_MAXSIG_unavailable]
caution = 1
header = sys/user.h
regexp = \bMAXSIG\b
desc =
  Depends on the constant <code>MAXSIG</code>, which is provided
  by <code>signal.h</code>, but unavailable in conformance mode.
